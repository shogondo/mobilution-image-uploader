//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/ATRealize.Mobilution.WebAPI.Responses")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalUrl {
            get {
                return this.OriginalUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalUrlField, value) != true)) {
                    this.OriginalUrlField = value;
                    this.RaisePropertyChanged("OriginalUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailUrl {
            get {
                return this.ThumbnailUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailUrlField, value) != true)) {
                    this.ThumbnailUrlField = value;
                    this.RaisePropertyChanged("ThumbnailUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCriteria", Namespace="http://schemas.datacontract.org/2004/07/ATRealize.Mobilution.WebAPI.Criteria")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.ImageCriteria))]
    public partial class BaseCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OffsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCriteria", Namespace="http://schemas.datacontract.org/2004/07/ATRealize.Mobilution.WebAPI.Criteria")]
    [System.SerializableAttribute()]
    public partial class ImageCriteria : ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.BaseCriteria {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageRequest", Namespace="http://schemas.datacontract.org/2004/07/ATRealize.Mobilution.WebAPI.Requests")]
    [System.SerializableAttribute()]
    public partial class ImageRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MobilutionServiceReference.IImageService")]
    public interface IImageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Find", ReplyAction="http://tempuri.org/IImageService/FindResponse")]
        ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindResponse Find(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Find", ReplyAction="http://tempuri.org/IImageService/FindResponse")]
        System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindResponse> FindAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Search", ReplyAction="http://tempuri.org/IImageService/SearchResponse")]
        ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchResponse Search(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Search", ReplyAction="http://tempuri.org/IImageService/SearchResponse")]
        System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchResponse> SearchAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Create", ReplyAction="http://tempuri.org/IImageService/CreateResponse")]
        ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateResponse Create(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageService/Create", ReplyAction="http://tempuri.org/IImageService/CreateResponse")]
        System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateResponse> CreateAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Find", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public FindRequest() {
        }
        
        public FindRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image FindResult;
        
        public FindResponse() {
        }
        
        public FindResponse(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image FindResult) {
            this.FindResult = FindResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Search", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.ImageCriteria criteria;
        
        public SearchRequest() {
        }
        
        public SearchRequest(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.ImageCriteria criteria) {
            this.criteria = criteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image> SearchResult;
        
        public SearchResponse() {
        }
        
        public SearchResponse(System.Collections.Generic.List<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image> SearchResult) {
            this.SearchResult = SearchResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.ImageRequest request;
        
        public CreateRequest() {
        }
        
        public CreateRequest(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.ImageRequest request) {
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image CreateResult;
        
        public CreateResponse() {
        }
        
        public CreateResponse(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.Image CreateResult) {
            this.CreateResult = CreateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageServiceChannel : ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.IImageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageServiceClient : System.ServiceModel.ClientBase<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.IImageService>, ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.IImageService {
        
        public ImageServiceClient() {
        }
        
        public ImageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindResponse Find(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindRequest request) {
            return base.Channel.Find(request);
        }
        
        public System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindResponse> FindAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.FindRequest request) {
            return base.Channel.FindAsync(request);
        }
        
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchResponse Search(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchRequest request) {
            return base.Channel.Search(request);
        }
        
        public System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchResponse> SearchAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.SearchRequest request) {
            return base.Channel.SearchAsync(request);
        }
        
        public ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateResponse Create(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateRequest request) {
            return base.Channel.Create(request);
        }
        
        public System.Threading.Tasks.Task<ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateResponse> CreateAsync(ATRealize.Mobilution.ImageUploader.Presentation.WPF.MobilutionServiceReference.CreateRequest request) {
            return base.Channel.CreateAsync(request);
        }
    }
}
